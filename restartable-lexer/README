Using async to block waiting for input in an ocamllex-generated lexer.
The idea is to wrap the tokenize function in a function that blocks on
a Pipe.Reader.t and communicates with Lexing.refill_buffer using
exceptions.

  $ ocamllex example.mll 
  11 states, 267 transitions, table size 1134 bytes
  $ ocamlfind ocamlc -w A -linkpkg -thread -package async example.ml  restartable_lexer.ml -o restartable_lexer
  $ ./restartable_lexer
  1 + 2 * 3
  > INT 1
  > PLUS
  > INT 2
  > TIMES
  > INT 3
  > EOL
  ** 4 5
  > TIMES
  > TIMES
  > INT 4
  > INT 5
  > EOL
    C-c C-c
  $ 